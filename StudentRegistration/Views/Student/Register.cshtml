@model StudentViewModel


<h2 class="text-center">Register</h2>

@section Scripts {
    
    <script>
        $(document).ready(function () {
            let index = 0;

            $("#addQualification").click(function () {
                index++;

                const newRow = `
                    <tr>
                        <td><input name="Qualifications[${index}].Course" class="form-control" required /></td>
                        <td><input name="Qualifications[${index}].University" class="form-control" required /></td>
                        <td><input name="Qualifications[${index}].Year" type="number" class="form-control" required /></td>
                        <td><input name="Qualifications[${index}].Percentage" type="number" step="0.01" class="form-control" required /></td>
                        <td><button type="button" class="btn btn-danger removeQualification">Remove</button></td>

                        </tr>`;
                $("#qualificationTable tbody").append(newRow);
            });
            $(document).on("click", ".removeQualification", function () {
            $(this).closest("tr").remove(); // Remove the closest <tr> to the clicked button
        });
        });
    </script>
    <partial name="_ValidationScriptsPartial" />
}

@using (Html.BeginForm("Register", "Student", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName)
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Age)
        @Html.TextBoxFor(m => m.Age, new { @class = "form-control", type = "number" })
        @Html.ValidationMessageFor(m => m.Age, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.DOB)
        @Html.TextBoxFor(m => m.DOB, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
        @Html.ValidationMessageFor(m => m.DOB, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Gender)
        @Html.DropDownListFor(m => m.Gender, new SelectList(new[] { "Male", "Female", "Other" }), "Select Gender", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber)
        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", type = "tel" })
        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Username)
        @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password)
        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
    </div>

    <h4>Qualifications</h4>
    <table class="table" id="qualificationTable">
        <thead>
            <tr>
                <th>Course</th>
                <th>University</th>
                <th>Year</th>
                <th>Percentage</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td><input name="Qualifications[0].Course" class="form-control" required />
                    @Html.ValidationMessageFor(m => m.Qualifications[0].Course, "", new { @class = "text-danger" })
                </td>
                <td><input name="Qualifications[0].University" class="form-control" required />
                    @Html.ValidationMessageFor(m => m.Qualifications[0].Course, "", new { @class = "text-danger" })
                </td>
                <td><input name="Qualifications[0].Year" type="number" class="form-control" required />
                    @Html.ValidationMessageFor(m => m.Qualifications[0].Course, "", new { @class = "text-danger" })
                </td>
                <td><input name="Qualifications[0].Percentage" type="number" step="0.01" class="form-control" required />
                    @Html.ValidationMessageFor(m => m.Qualifications[0].Course, "", new { @class = "text-danger" })
                </td>

            </tr>
        </tbody>
    </table>
    <button type="button" id="addQualification" class="btn btn-secondary">Add</button>

    <br />
    <br />
    <input type="submit" value="Register" class="btn btn-primary" />

 


}
